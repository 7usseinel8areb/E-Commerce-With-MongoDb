@model List<E_Commerce_With_MongoDb.Models.Product>
@{
    ViewData["Title"] = "Products List";
    var categoryNames = ViewBag.CategoryNames as Dictionary<string, string>;
}

<div class="container py-5">
    <div class="card shadow">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h2 class="mb-0">Products</h2>
            <a asp-action="Create" class="btn btn-light text-primary">
                <i class="fas fa-plus"></i> Add New Product
            </a>
        </div>

        <div class="card-body">
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success">@TempData["Success"]</div>
            }
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger">@TempData["Error"]</div>
            }

            <div class="table-responsive">
                <table class="table table-striped align-middle text-center">
                    <thead class="table-light">
                        <tr>
                            <th>Image</th>
                            <th>Name</th>
                            <th>Price</th>
                            <th>Category</th>
                            <th>Properties</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            foreach (var product in Model)
                            {
                                var imageProp = product.ProductProperties?
                                .FirstOrDefault(p => p.Key.ToLower().Contains("image") ||
                                p.Value?.ToString()?.EndsWith(".jpg") == true ||
                                p.Value?.ToString()?.EndsWith(".png") == true);

                                <tr>
                                    <td>
                                        @if (imageProp.HasValue && !string.IsNullOrWhiteSpace(imageProp.Value.Value?.ToString()))
                                        {
                                            <img src="@imageProp.Value.Value" alt="Product Image"
                                                 style="width: 80px; height: 80px; object-fit: cover;" class="rounded" />
                                        }
                                        else
                                        {
                                            <span class="text-muted">No Image</span>
                                        }
                                    </td>

                                    <td>@product.Name</td>
                                    <td>@product.Price.ToString("0.00")</td>
                                    <td>@(categoryNames?.GetValueOrDefault(product.CategoryId.ToString()) ?? "N/A")</td>
                                    <td class="text-start">
                                        @if (product.ProductProperties != null)
                                        {
                                            <ul class="list-unstyled mb-0">
                                                @foreach (var prop in product.ProductProperties)
                                                {
                                                    if (!(prop.Key.ToLower().Contains("image") ||
                                                    prop.Value?.ToString()?.EndsWith(".jpg") == true ||
                                                    prop.Value?.ToString()?.EndsWith(".png") == true))
                                                    {
                                                        <li><strong>@prop.Key:</strong> @prop.Value</li>
                                                    }
                                                }
                                            </ul>
                                        }
                                    </td>
                                    <td class="text-center">
                                        <a href="@Url.Action("Edit", "Product", new { id = product.Id })"
                                           class="btn btn-warning btn-sm px-4 py-2">
                                            <i class="fas fa-edit"></i> Edit
                                        </a>
                                        <button type="button" class="btn btn-danger btn-sm px-4 py-2"
                                                data-bs-toggle="modal" data-bs-target="#deleteModal"
                                                data-product-id="@product.Id.ToString()">
                                            <i class="fas fa-trash-alt"></i> Delete
                                        </button>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="6" class="text-muted">No products available.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this product? This action cannot be undone.</p>
                    <p class="fw-bold" id="productName"></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <form asp-action="DeleteConfirmed" method="post" id="deleteForm">
                        <input type="hidden" id="productId" name="id" value="" />
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-danger">
                            <i class="fas fa-trash-alt"></i> Confirm Delete
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Delete Modal Handling
            const deleteModal = document.getElementById('deleteModal');

            deleteModal.addEventListener('show.bs.modal', function(event) {
                const button = event.relatedTarget;
                const productId = button.getAttribute('data-product-id');
                const productName = button.closest('tr').querySelector('td:nth-child(2)').textContent;

                document.getElementById('productId').value = productId;
                document.getElementById('productName').textContent = productName;
            });

            // Form submission handling
            document.getElementById('deleteForm').addEventListener('submit', function(e) {
                const productId = document.getElementById('productId').value;
                if (!productId) {
                    e.preventDefault();
                    alert('Error: Product ID is missing!');
                    return false;
                }
            });
        });
    </script>
}
